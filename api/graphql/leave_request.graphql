type LeaveRequest {
    id: ID!
    user: User!
    leave_type: LeaveType!
    approval_process: ApprovalProcess!
    date_from: Date!
    date_to: Date!
    days_count: Int!
    reason: String!
    comment: String
    status: LeaveRequestStatus!
    replacement: LeaveRequestReplacement
    current_approval_step: Int!
    approval_steps_history: [ApprovalStepsHistory!]!
}

enum LeaveRequestStatus {
    DRAFT
    SENT
    IN_PROGRESS
    APPROVED
    REJECTED
    CANCELLED
}

extend type Query {
    leaveRequestsAwaitingApproval: [LeaveRequest!]! @field(resolver: "App\\GraphQL\\Queries\\LeaveRequestResolver@leaveRequestsAwaitingApproval")

    # Get all leave requests from a specific organization
    leaveRequests(organization: ID!) : [LeaveRequest] @field(resolver: "App\\GraphQL\\Queries\\LeaveRequestResolver@leaveRequests")
}

extend type Mutation {
    createLeaveRequest(
        leave_type: ID!
        date_from: Date!
        date_to: Date!
        reason: String!
        comment: String
        replacement: ID
        save_as_draft: Boolean!
    ) : LeaveRequest! @field(resolver: "App\\GraphQL\\Mutations\\LeaveRequestMutator@createLeaveRequest")

    approveLeaveRequest(
        leave_request: ID!
        comment: String!
    ) : LeaveRequest! @field(resolver: "App\\GraphQL\\Mutations\\LeaveRequestMutator@approveLeaveRequest")
}
